/* CSS3 Prefixes
 * @param {*} $property - Property
 * @param {*} $value - Value
 */
@mixin css3-prefix($property, $value) {
  #{$property}: #{$value};
  -o-#{$property}: #{$value};
  -ms-#{$property}: #{$value};
  -moz-#{$property}: #{$value};
  -khtml-#{$property}: #{$value};
  -webkit-#{$property}: #{$value};
}
/* Animation
 * @param {name duration timing-function delay iteration-count direction fill-mode play-state} $value - Value
 */
@mixin animation($value) {
  @include css3-prefix('animation', $value);
}
/* Background Size
 * @param {auto|length|cover|contain|initial|inherit} $value - Value
 */
@mixin background-size($value) {
  @include css3-prefix('background-size', $value);
}
/* Box Shadow
 * @param {none|h-shadow v-shadow blur spread color |inset|initial|inherit} $value - Value
 */
@mixin box-shadow($value) {
  @include css3-prefix('box-shadow', $value);
}
/* Filter
 * @param {none/filter-functions} $value - Value
 */
@mixin filter($value) {
  @include css3-prefix('filter', $value);
}
/* Filter Grayscale
 * @param {percent} $value - Value
 */
@mixin filter-grayscale($value) {
  @include css3-prefix('filter', grayscale($value));
}
/* Flex
 * @param {flex-grow flex-shrink flex-basis|auto|initial|inherit} $value - Value
 */
@mixin flex($value) {
  @include css3-prefix('flex', $value);
}
/* Display Flex
 * @param {true|false} $is_important - Is important
 */
@mixin display-flex() {
  display: flex;
  display: -ms-flexbox;
  display: -moz-box;
  display: -khtml-flex;
  display: -webkit-flex;
}
/* Opacity
 * @param {number} $value - Value
 */
@mixin opacity($value) {
  @include css3-prefix('opacity', $value);
  filter: alpha(opacity=#{$value * 100});
  filter: progid:DXImageTransform.Microsoft.Alpha(opacity=#{$value * 100});
  opacity: $value;
}
/* Perspective
 * @param {length|none} $value - Value
 */
@mixin prespective($value) {
  @include css3-prefix('perspective', $value);
}
/* Placeholder
 * @param {}
 */
@mixin placeholder() {
  &::-webkit-input-placeholder { // For Chrome / Opera / Safari
    @content;
  }
  &::-moz-placeholder { // For Firefox 19 and up
    @content;
  }
  &:-moz-placeholder { // For Firefox 18 and earlier versions
    @content;
  }
  &:-ms-input-placeholder { // For IE10 and up
    @content;
  }
}
/* Transform
 * @param {none|transform-functions|initial|inherit} $value - Value
 */
@mixin transform($value) {
  @include css3-prefix('transform', $value);
}
/* Transform Rotate
 * @param {number} $value - Value
 */
@mixin transform-rotate($value) {
  @include css3-prefix('transform', rotate($value));
}
/* Transform Scale
 * @param {number} $value - Value
 */
@mixin transform-scale($value...) {
  @include css3-prefix('transform', scale($value));
}
/* Transform Scale X
 * @param {number} $value - Value
 */
@mixin transform-scaleX($value...) {
  @include css3-prefix('transform', scaleX($value));
}
/* Transform Scale Y
 * @param {number} $value - Value
 */
@mixin transform-scaleY($value...) {
  @include css3-prefix('transform', scaleY($value));
}
/* Transform Translate
 * @param {number} $value - Value
 */
@mixin transform-translate($value...) {
  @include css3-prefix('transform', translate($value));
}
/* Transform Translate X
 * @param {number} $value - Value
 */
@mixin transform-translateX($value) {
  @include css3-prefix('transform', translateX($value));
}
/* Transform Translate Y
 * @param {number} $value - Value
 */
@mixin transform-translateY($value) {
  @include css3-prefix('transform', translateY($value));
}
/* Transition
 * @param {css-property duration timing-function|none|initial|inherit} $value - Value
 */
@mixin transition($value) {
  @include css3-prefix('transition', $value);
}
